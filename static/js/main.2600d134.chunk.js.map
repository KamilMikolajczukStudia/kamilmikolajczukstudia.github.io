{"version":3,"sources":["img/sggw.png","img/ias.png","img/kot.jpg","img/robot.png","img/kmstudia.png","img/moja-wisniowa.png","Header/Header.tsx","utils/CloseButton.tsx","utils/Emoji.tsx","Banner/AboutMeContent.tsx","Banner/AboutMeDialog.tsx","Banner/Banner.tsx","Post/GithubAndLiveButtons.tsx","Post/Post.tsx","Posts/PostDialog.tsx","Content.tsx","Posts/Posts.tsx","Main/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","createStyles","title","flexGrow","breakpoints","down","textAlign","Header","classes","AppBar","position","Toolbar","Typography","variant","root","top","spacing","right","color","palette","grey","CloseButton","onClick","IconButton","aria-label","Emoji","icon","label","role","AboutMeContent","gutterBottom","Link","href","target","emailButton","marginTop","textTransform","email","join","AboutMeDialog","open","handleClose","useState","show","setShow","showEmail","useCallback","Dialog","onClose","maxWidth","DialogTitle","disableTypography","DialogContent","dividers","Button","DialogActions","container","display","alignItems","justifyContent","padding","flexDirection","image","marginRight","button","paddingLeft","paddingRight","description","Banner","setOpen","openDialog","closeDialog","Container","src","sggwLogo","alt","className","size","GithubAndLiveButtons","withStyles","marginLeft","codeLink","liveLink","Tooltip","component","style","backgroundColor","startIcon","height","actions","actionArea","flex","content","width","Post","id","img","shortDescription","onOpenDescription","onDescription","Card","CardActionArea","CardMedia","CardContent","CardActions","buttonIcon","marginBottom","PostDialog","longDescription","WorningInfo","children","Alert","severity","placeholder","posts","kot","kmstudia","mojaWisniowa","AlertTitle","ias","robot","Posts","opendPost","setOpendPost","onOpen","selected","find","post","Grid","justify","map","item","key","lg","md","sm","xs","secondary","light","scrollbarColor","scrollbarWidth","borderRadius","Main","createMuiTheme","primary","main","green","orange","Boolean","window","location","hostname","match","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2600d134.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sggw.8f7b34be.png\";","module.exports = __webpack_public_path__ + \"static/media/ias.45939569.png\";","module.exports = __webpack_public_path__ + \"static/media/kot.63003ac4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/robot.5b821914.png\";","module.exports = __webpack_public_path__ + \"static/media/kmstudia.dd4cb8a9.png\";","module.exports = __webpack_public_path__ + \"static/media/moja-wisniowa.6ce17554.png\";","import React from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    title: {\r\n      flexGrow: 1,\r\n      [theme.breakpoints.down('xs')]: {\r\n        textAlign: 'center'\r\n      }\r\n    }\r\n  })\r\n)\r\n\r\nexport default function Header() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <AppBar position='static'>\r\n      <Toolbar>\r\n        <Typography variant='h6' classes={{ root: classes.title }}>\r\n          Budowa Serwisów Interntowych\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      position: 'absolute',\r\n      top: theme.spacing(1),\r\n      right: theme.spacing(1),\r\n      color: theme.palette.grey[500]\r\n    }\r\n  })\r\n)\r\n\r\ninterface IProps {\r\n  onClick: () => void\r\n}\r\n\r\nexport default function CloseButton({ onClick }: IProps) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <IconButton aria-label='close' onClick={onClick} classes={{ root: classes.root }}>\r\n      <CloseIcon />\r\n    </IconButton>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\ninterface IProps {\r\n  label: string\r\n  icon: string\r\n}\r\n\r\nexport default function Emoji({ icon, label }: IProps) {\r\n  return (\r\n    <span role='img' aria-label={label}>\r\n      {` ${icon} `}\r\n    </span>\r\n  )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport Link from '@material-ui/core/Link'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport Emoji from '../utils/Emoji'\r\n\r\nexport default function AboutMeContent() {\r\n  return (\r\n    <Fragment>\r\n      <Typography gutterBottom>\r\n        Projekt ten jest zbiornikiem na moje projekty uczelniane które są dostępne również na\r\n        GitHub'ie,\r\n        <Link href='https://github.com/KamilMikolajczukStudia' target='_blank'>\r\n          {' https://github.com/KamilMikolajczukStudia '}\r\n        </Link>\r\n      </Typography>\r\n\r\n      <Typography gutterBottom>\r\n        W projekcie użyłem{' '}\r\n        <Link href='https://reactjs.org/' target='_blank'>\r\n          React'a\r\n        </Link>\r\n        <Emoji icon='❤️' label='serce' />\r\n        {' z '}\r\n        <Link href='https://www.typescriptlang.org/' target='_blank'>\r\n          TypeScriptem\r\n        </Link>{' '}\r\n        <Emoji icon='❤️' label='serce' /> oraz{' '}\r\n        <Link href='https://material-ui.com/' target='_blank'>\r\n          Material-UI\r\n        </Link>{' '}\r\n        , dzięki M-UI można podpatrzeć również działanie{' '}\r\n        <Link href='https://cssinjs.org/' target='_blank'>\r\n          JSS\r\n        </Link>{' '}\r\n        oraz implementację komponentów w stylu{' '}\r\n        <Link href='https://material.io/design/' target='_blank'>\r\n          Material Design\r\n        </Link>\r\n      </Typography>\r\n\r\n      <Typography gutterBottom>\r\n        Aby odpalić projekt u siebie należy wyposażyć się w{' '}\r\n        <Link href='https://nodejs.org' target='_blank'>\r\n          Node.js\r\n        </Link>\r\n      </Typography>\r\n\r\n      <Typography variant='h6' gutterBottom>\r\n        Projekt \"Moja Wiśniowa\"\r\n      </Typography>\r\n\r\n      <Typography gutterBottom>\r\n        Projekt \"Moja Wiśniowa\" jest projektem szkolnym nastawionym przede wszystkim na PHP i MySQL\r\n        w szczególności kwestii prezentacji pewnych mechanizmów takich jak logowanie dodawanie i\r\n        usuwanie treści jak i podstawowych aspektów związanych z bezpieczeństwem takimi jak SQL\r\n        injection czy atak XSS, dlatego nie ma fajerwerków w CSS czy JS, za to w tym projekcie PHP\r\n        nie ma wcale <Emoji icon='😀' label='uśmiech' />\r\n      </Typography>\r\n\r\n      <Typography gutterBottom>\r\n        Podchodź z dystansem - chodzi oczywiście o to że temat jest bardzo luźny nie miało być to\r\n        nic poważnego <Emoji icon='😀' label={'label'} />\r\n      </Typography>\r\n\r\n      <Typography variant='h6' gutterBottom>\r\n        IAS i robot marsjański\r\n      </Typography>\r\n\r\n      <Typography gutterBottom>\r\n        Aby nie było pusto dodaję 2 projekty zrobione w ramach zajęć na poprednich semestrach -\r\n        symulator maszyny IAS oraz grę logiczną robot marsjański\r\n      </Typography>\r\n    </Fragment>\r\n  )\r\n}\r\n","import React, { useState, useCallback } from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Link from '@material-ui/core/Link'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\n\r\nimport CloseButton from '../utils/CloseButton'\r\nimport AboutMeContent from './AboutMeContent'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  emailButton: {\r\n    marginTop: theme.spacing(1),\r\n    textTransform: 'none'\r\n  }\r\n}))\r\n\r\ninterface IProps {\r\n  open: boolean\r\n  handleClose: () => void\r\n}\r\n\r\nconst email = ['k.mikolajczuk123', 'gmail.com'].join('@')\r\n\r\nexport default function AboutMeDialog({ open, handleClose }: IProps) {\r\n  const classes = useStyles()\r\n  const [show, setShow] = useState(false)\r\n\r\n  const showEmail = useCallback(() => setShow(true), [])\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open} maxWidth='md'>\r\n      <DialogTitle disableTypography>\r\n        <Typography variant='h6'>O mnie a właściwie o tym projekcie</Typography>\r\n\r\n        <CloseButton onClick={handleClose} />\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n        <AboutMeContent />\r\n\r\n        <Typography variant='h6' gutterBottom>\r\n          Kontakt\r\n        </Typography>\r\n\r\n        <Typography gutterBottom>\r\n          <Link href='https://github.com/mikolajczukkamil'>Mój Github</Link>\r\n        </Typography>\r\n\r\n        <Typography gutterBottom>\r\n          <Link href='https://www.linkedin.com/in/kamil-miko%C5%82ajczuk-61682b16a/'>\r\n            Mój LinkedIn\r\n          </Link>\r\n        </Typography>\r\n\r\n        <Typography gutterBottom>\r\n          {show ? (\r\n            email\r\n          ) : (\r\n            <Button onClick={showEmail} variant='outlined' classes={{ root: classes.emailButton }}>\r\n              Pokaż Email\r\n            </Button>\r\n          )}\r\n        </Typography>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button color='secondary' variant='contained' onClick={handleClose}>\r\n          OK\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Container from '@material-ui/core/Container'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport sggwLogo from '../img/sggw.png'\r\nimport AboutMeDialog from './AboutMeDialog'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      padding: '64px 24px',\r\n      [theme.breakpoints.down('sm')]: {\r\n        flexDirection: 'column'\r\n      }\r\n    },\r\n    image: {\r\n      display: 'block',\r\n      maxWidth: 256,\r\n      marginRight: 48,\r\n      [theme.breakpoints.down('sm')]: {\r\n        marginRight: 0\r\n      }\r\n    },\r\n    button: {\r\n      marginTop: 32,\r\n      paddingLeft: theme.spacing(4),\r\n      paddingRight: theme.spacing(4)\r\n    },\r\n    description: {\r\n      [theme.breakpoints.down('sm')]: {\r\n        textAlign: 'center',\r\n        marginTop: theme.spacing(4)\r\n      }\r\n    }\r\n  })\r\n)\r\n\r\nexport default function Banner() {\r\n  const classes = useStyles()\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const openDialog = useCallback(() => setOpen(true), [])\r\n  const closeDialog = useCallback(() => setOpen(false), [])\r\n\r\n  return (\r\n    <Container maxWidth='lg' classes={{ root: classes.container }}>\r\n      <img src={sggwLogo} alt='SGGW logo' className={classes.image} />\r\n\r\n      <div className={classes.description}>\r\n        <Typography variant='h2'>Kamil Mikołajczuk</Typography>\r\n        <Typography variant='subtitle1'>Budowa Serwisów interntowych</Typography>\r\n\r\n        <Button\r\n          variant='outlined'\r\n          size='large'\r\n          color='primary'\r\n          classes={{ root: classes.button }}\r\n          onClick={openDialog}\r\n        >\r\n          O mnie\r\n        </Button>\r\n      </div>\r\n\r\n      <AboutMeDialog handleClose={closeDialog} open={open} />\r\n    </Container>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { withStyles, WithStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport GitHubIcon from '@material-ui/icons/GitHub'\r\nimport DevicesIcon from '@material-ui/icons/Devices'\r\n\r\nconst useStyles = {\r\n  root: {\r\n    '&:not(:first-child)': {\r\n      marginLeft: 8\r\n    }\r\n  },\r\n  icon: {}\r\n}\r\n\r\ninterface IProps extends WithStyles<typeof useStyles> {\r\n  codeLink: string\r\n  liveLink: string\r\n}\r\n\r\nfunction GithubAndLiveButtonsWithStyles({ codeLink, liveLink, classes }: IProps) {\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Zobacz kod źródłowy na GitHub'ie\">\r\n        <Button\r\n          variant='contained'\r\n          color='inherit'\r\n          size='medium'\r\n          component='a'\r\n          href={codeLink}\r\n          target='_blank'\r\n          classes={{ root: classes.root }}\r\n          style={{ backgroundColor: '#24292e', color: 'white' }}\r\n          startIcon={<GitHubIcon color='inherit' classes={{ root: classes.icon }} />}\r\n        >\r\n          Kod\r\n        </Button>\r\n      </Tooltip>\r\n\r\n      <Tooltip title='Zobacz projekt na żywo'>\r\n        <Button\r\n          variant='contained'\r\n          color='primary'\r\n          size='medium'\r\n          component='a'\r\n          href={liveLink}\r\n          classes={{ root: classes.root }}\r\n          startIcon={<DevicesIcon classes={{ root: classes.icon }} />}\r\n        >\r\n          Live\r\n        </Button>\r\n      </Tooltip>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const GithubAndLiveButtons = withStyles(useStyles)(GithubAndLiveButtonsWithStyles)\r\n","import React, { useCallback } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActionArea from '@material-ui/core/CardActionArea'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\nimport { IPost } from '../Content'\r\nimport { GithubAndLiveButtons } from './GithubAndLiveButtons'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  actions: {\r\n    '& > :last-child': {\r\n      marginLeft: 'auto'\r\n    }\r\n  },\r\n  actionArea: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    alignItems: 'stretch',\r\n    flexDirection: 'column',\r\n    justifyContent: 'start'\r\n  },\r\n  content: {\r\n    width: '100%'\r\n  }\r\n})\r\n\r\ninterface IProps extends IPost {\r\n  onOpenDescription?: (id: number) => void\r\n}\r\n\r\nexport default function Post({\r\n  id,\r\n  img,\r\n  title,\r\n  liveLink,\r\n  codeLink,\r\n  shortDescription,\r\n  onOpenDescription\r\n}: IProps) {\r\n  const classes = useStyles()\r\n\r\n  const onDescription = useCallback(() => {\r\n    if (onOpenDescription) onOpenDescription(id)\r\n  }, [onOpenDescription, id])\r\n\r\n  return (\r\n    <Card classes={{ root: classes.root }}>\r\n      <CardActionArea onClick={onDescription} classes={{ root: classes.actionArea }}>\r\n        <CardMedia component='img' alt='' height='140' image={img} title={title} />\r\n\r\n        <CardContent classes={{ root: classes.content }}>\r\n          <Typography gutterBottom variant='h5' component='h2'>\r\n            {title}\r\n          </Typography>\r\n\r\n          {shortDescription}\r\n        </CardContent>\r\n      </CardActionArea>\r\n\r\n      <CardActions classes={{ root: classes.actions }}>\r\n        <GithubAndLiveButtons codeLink={codeLink} liveLink={liveLink} />\r\n\r\n        <Tooltip title='Zobacz pełny opis projektu'>\r\n          <Button color='secondary' variant='contained' onClick={onDescription}>\r\n            Opis\r\n          </Button>\r\n        </Tooltip>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport { IPost } from '../Content'\r\nimport CloseButton from '../utils/CloseButton'\r\nimport { GithubAndLiveButtons } from '../Post'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    buttonIcon: {\r\n      marginRight: theme.spacing(1.5)\r\n    },\r\n    image: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(2)\r\n    }\r\n  })\r\n)\r\n\r\ninterface IProps extends IPost {\r\n  open: boolean\r\n  handleClose: () => void\r\n}\r\n\r\nexport default function PostDialog({\r\n  open,\r\n  img,\r\n  title,\r\n  codeLink,\r\n  liveLink,\r\n  handleClose,\r\n  longDescription\r\n}: IProps) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open}>\r\n      <DialogTitle disableTypography>\r\n        <Typography variant='h6'>{title}</Typography>\r\n\r\n        <CloseButton onClick={handleClose} />\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n        <img alt='' src={img} title={title} className={classes.image} />\r\n\r\n        {longDescription}\r\n\r\n        <GithubAndLiveButtons\r\n          codeLink={codeLink}\r\n          liveLink={liveLink}\r\n          classes={{ root: classes.button, icon: classes.buttonIcon }}\r\n        />\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button color='secondary' variant='contained' onClick={handleClose}>\r\n          OK\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import React, { Fragment, ReactNode } from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport { Typography } from '@material-ui/core'\r\nimport AlertTitle from '@material-ui/lab/AlertTitle'\r\n\r\nimport ias from './img/ias.png'\r\nimport kot from './img/kot.jpg'\r\nimport robot from './img/robot.png'\r\nimport kmstudia from './img/kmstudia.png'\r\nimport mojaWisniowa from './img/moja-wisniowa.png'\r\n\r\nimport AboutMeContent from './Banner/AboutMeContent'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}))\r\n\r\ninterface IProps {\r\n  children?: ReactNode\r\n}\r\n\r\nfunction WorningInfo({ children }: IProps) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Alert severity='warning' classes={{ root: classes.root }}>\r\n      {children}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport interface IPost {\r\n  id: number\r\n  title: string\r\n  img: string\r\n  shortDescription: React.ReactNode\r\n  longDescription: React.ReactNode\r\n  liveLink: string\r\n  codeLink: string\r\n}\r\n\r\nexport const placeholder: IPost = {\r\n  id: 0,\r\n  title: 'Tytuł',\r\n  img: 'https://via.placeholder.com/1024x512.png?text=Obrazek',\r\n  shortDescription: <p>Krótki opis</p>,\r\n  longDescription: <p>Długi opis</p>,\r\n  liveLink: '#',\r\n  codeLink: '#'\r\n}\r\n\r\nconst posts: IPost[] = [\r\n  {\r\n    id: 2,\r\n    img: kot,\r\n    title: 'Projekt 1',\r\n    shortDescription: (\r\n      <Fragment>\r\n        <Typography variant='body2'>Projekt na labolatorium 1</Typography>\r\n        <Typography variant='body2'>\r\n          Wstęp do architektury klient-server i języka HTML schemat pliku i kodowanie znaków\r\n        </Typography>\r\n      </Fragment>\r\n    ),\r\n    longDescription: (\r\n      <Fragment>\r\n        <Typography>Projekt na labolatorium 1</Typography>\r\n        <Typography>\r\n          Wstęp do architektury klient-server i języka HTML, schemat pliku i kodowanie\r\n        </Typography>\r\n      </Fragment>\r\n    ),\r\n    liveLink: 'https://kamilmikolajczuk.000webhostapp.com/projekt1/',\r\n    codeLink: 'https://github.com/KamilMikolajczukStudia/projekt1'\r\n  },\r\n  {\r\n    id: 3,\r\n    img: kmstudia,\r\n    title: 'Kamil Mikołajczuk - Studia',\r\n    shortDescription: (\r\n      <Fragment>\r\n        <Typography variant='body2'>\r\n          Projekt zbiorczy na przedmiot \"Budowa Serwisów interntowych\"\r\n        </Typography>\r\n      </Fragment>\r\n    ),\r\n    longDescription: (\r\n      <Fragment>\r\n        <AboutMeContent />\r\n      </Fragment>\r\n    ),\r\n    liveLink: './',\r\n    codeLink: 'https://github.com/KamilMikolajczukStudia/kamilmikolajczukstudia-github-io-src'\r\n  },\r\n  {\r\n    id: 1,\r\n    img: mojaWisniowa,\r\n    title: 'Moja Wiśniowa',\r\n    shortDescription: (\r\n      <Fragment>\r\n        <Typography variant='body2'>Szkolny projekt zaliczeniowy</Typography>\r\n        <WorningInfo>Podchodź z dystansem</WorningInfo>\r\n      </Fragment>\r\n    ),\r\n    longDescription: (\r\n      <Fragment>\r\n        <Typography>Szkolny projekt zaliczeniowy</Typography>\r\n        <WorningInfo>\r\n          <AlertTitle>Uwaga</AlertTitle> Do tego projektu podchodź z dystansem\r\n        </WorningInfo>\r\n      </Fragment>\r\n    ),\r\n    liveLink: 'https://kamilmikolajczuk.000webhostapp.com/moja-wisniowa',\r\n    codeLink: 'https://github.com/KamilMikolajczukStudia/moja-wisniowa'\r\n  },\r\n  {\r\n    id: 4,\r\n    img: ias,\r\n    title: 'Symulator maszyny IAS',\r\n    shortDescription: (\r\n      <Fragment>\r\n        <Typography variant='body2'>\r\n          Symulator maszyny IAS wykonany na zajęcia z Architektury Komputerów\r\n        </Typography>\r\n      </Fragment>\r\n    ),\r\n    longDescription: (\r\n      <Fragment>\r\n        <Typography>\r\n          Symulator maszyny IAS wykonuje kod napisany na legendarne maszyny IAS, umożliwia też\r\n          śledzenie krok po kroku wykonania programu, wykonany na zajęcia z Architektury Komputerów\r\n        </Typography>\r\n      </Fragment>\r\n    ),\r\n    liveLink: 'https://github.com/MikolajczukKamil/IAS',\r\n    codeLink: 'https://github.com/MikolajczukKamil/IAS'\r\n  },\r\n  {\r\n    id: 5,\r\n    img: robot,\r\n    title: 'Robot marsjański',\r\n    shortDescription: (\r\n      <Fragment>\r\n        <Typography variant='body2'>\r\n          Projekt wykonany w ramach przedmiotu wstęp do programowania\r\n        </Typography>\r\n      </Fragment>\r\n    ),\r\n    longDescription: (\r\n      <Fragment>\r\n        <Typography>\r\n          Robot marsjański - gra pamięciowa, twoim zadaniem jest znaleźć ukryty cel możesz poruszać\r\n          się robotem prosto, w lewo, w prawo oraz wstecz po każdym ruchu otrzymujesz informację jak\r\n          daleko jesteś od celu, pamiętaj że ilość paliwa w robocie jest ograniczona, w razie\r\n          problemów pomoże ci AI które w możliwie najmniejszej ilości kroków dokończy szukanie celu,\r\n          do wyboru są dwie wersje graficzna oraz tekstowa (dla prawdziwych mistrzów)\r\n        </Typography>\r\n      </Fragment>\r\n    ),\r\n    liveLink: 'https://github.com/MikolajczukKamil/robot',\r\n    codeLink: 'https://github.com/MikolajczukKamil/robot'\r\n  }\r\n]\r\n\r\nexport default posts\r\n","import React, { Fragment, useCallback, useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport Post from '../Post'\r\nimport PostDialog from './PostDialog'\r\nimport posts, { IPost, placeholder } from '../Content'\r\n\r\nexport default function Posts() {\r\n  const [open, setOpen] = useState(false)\r\n  const [opendPost, setOpendPost] = useState<IPost>(placeholder)\r\n\r\n  const onOpen = useCallback(id => {\r\n    const selected = posts.find(post => post.id === id)\r\n    if (!selected) return\r\n\r\n    setOpendPost(selected)\r\n    setOpen(true)\r\n  }, [])\r\n\r\n  const handleClose = useCallback(() => setOpen(false), [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid container spacing={2} justify='center'>\r\n        {posts.map(post => (\r\n          <Grid item key={post.id} lg={4} md={4} sm={6} xs={12}>\r\n            <Post {...post} onOpenDescription={onOpen}></Post>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      <PostDialog handleClose={handleClose} {...opendPost} open={open}></PostDialog>\r\n    </Fragment>\r\n  )\r\n}\r\n","import React, { Fragment } from 'react'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\n\nimport Header from '../Header'\nimport Banner from '../Banner'\nimport Posts from '../Posts'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    '@global': {\n      '::-moz-selection': {\n        backgroundColor: theme.palette.secondary.light\n      },\n      '::selection': {\n        backgroundColor: theme.palette.secondary.light\n      },\n\n      '*': {\n        scrollbarColor: `${theme.palette.grey[500]} ${theme.palette.grey[100]}`,\n        scrollbarWidth: 'thin'\n      },\n      '::-webkit-scrollbar-track': {\n        borderRadius: 2,\n        backgroundColor: theme.palette.grey[200]\n      },\n      '::-webkit-scrollbar': {\n        width: 6,\n        height: 6\n      },\n      '::-webkit-scrollbar-thumb': {\n        borderRadius: 2,\n        backgroundColor: theme.palette.grey[500]\n      }\n    }\n  })\n)\n\nexport default function Main() {\n  useStyles()\n\n  return (\n    <Fragment>\n      <Header />\n\n      <Container maxWidth='lg'>\n        <Banner />\n\n        <Posts />\n      </Container>\n    </Fragment>\n  )\n}\n","import React from 'react'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport { createMuiTheme } from '@material-ui/core/styles'\r\nimport { ThemeProvider } from '@material-ui/styles'\r\nimport { green, orange } from '@material-ui/core/colors'\r\n\r\nimport Main from './Main'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: green[700]\r\n    },\r\n    secondary: {\r\n      main: orange[800]\r\n    }\r\n  }\r\n})\r\n\r\nexport default function App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n\r\n      <Main />\r\n    </ThemeProvider>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}