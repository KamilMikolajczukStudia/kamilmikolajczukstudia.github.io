{"version":3,"sources":["img/ias.png","img/kot.jpg","img/robot.png","img/kmstudia.png","img/moja-wisniowa.png","img/sggw.png","Post/GithubAndLiveButtons.tsx","Post/Post.tsx","utils/CloseButton.tsx","Posts/PostDialog.tsx","utils/Emoji.tsx","Banner/AboutMeContent.tsx","Content.tsx","Posts/Posts.tsx","Header/Header.tsx","Banner/AboutMeDialog.tsx","Banner/Banner.tsx","Footer/Footer.tsx","Main/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","GithubAndLiveButtons","withStyles","root","marginLeft","icon","codeLink","liveLink","classes","Tooltip","title","Button","variant","color","size","component","href","target","style","backgroundColor","startIcon","useStyles","makeStyles","height","display","flexDirection","actions","actionArea","flex","alignItems","justifyContent","content","width","Post","id","img","shortDescription","onOpenDescription","onDescription","useCallback","Card","CardActionArea","onClick","CardMedia","alt","image","CardContent","Typography","gutterBottom","CardActions","theme","createStyles","position","top","spacing","right","palette","grey","CloseButton","IconButton","aria-label","button","marginTop","buttonIcon","marginRight","marginBottom","PostDialog","open","handleClose","longDescription","Dialog","onClose","DialogTitle","disableTypography","DialogContent","dividers","src","className","DialogActions","Emoji","label","role","AboutMeContent","Link","WorningInfo","children","Alert","severity","placeholder","posts","kot","kmstudia","mojaWisniowa","AlertTitle","ias","robot","Posts","useState","setOpen","opendPost","setOpendPost","onOpen","selected","find","post","Grid","container","justify","map","item","key","lg","md","sm","xs","flexGrow","breakpoints","down","textAlign","Header","AppBar","Toolbar","email","join","AboutMeDialog","maxWidth","padding","paddingLeft","paddingRight","description","Banner","openDialog","closeDialog","Container","sggwLogo","primary","contrastText","main","bottom","userSelect","dark","iconLink","year","Date","getFullYear","toString","Footer","fontSize","align","secondary","light","scrollbarColor","scrollbarWidth","borderRadius","Main","createMuiTheme","green","orange","Boolean","window","location","hostname","match","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d42749dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ias.45939569.png\";","module.exports = __webpack_public_path__ + \"static/media/kot.63003ac4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/robot.5b821914.png\";","module.exports = __webpack_public_path__ + \"static/media/kmstudia.dd4cb8a9.png\";","module.exports = __webpack_public_path__ + \"static/media/moja-wisniowa.6ce17554.png\";","module.exports = __webpack_public_path__ + \"static/media/sggw.8f7b34be.png\";","import React from 'react'\r\nimport { withStyles, WithStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport GitHubIcon from '@material-ui/icons/GitHub'\r\nimport DevicesIcon from '@material-ui/icons/Devices'\r\n\r\nconst useStyles = {\r\n  root: {\r\n    '&:not(:first-child)': {\r\n      marginLeft: 8\r\n    }\r\n  },\r\n  icon: {}\r\n}\r\n\r\ninterface IProps extends WithStyles<typeof useStyles> {\r\n  codeLink: string\r\n  liveLink: string\r\n}\r\n\r\nfunction GithubAndLiveButtonsWithStyles({ codeLink, liveLink, classes }: IProps) {\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Zobacz kod źródłowy na GitHub'ie\">\r\n        <Button\r\n          variant='contained'\r\n          color='inherit'\r\n          size='medium'\r\n          component='a'\r\n          href={codeLink}\r\n          target='_blank'\r\n          classes={{ root: classes.root }}\r\n          style={{ backgroundColor: '#24292e', color: 'white' }}\r\n          startIcon={<GitHubIcon color='inherit' classes={{ root: classes.icon }} />}\r\n        >\r\n          Kod\r\n        </Button>\r\n      </Tooltip>\r\n\r\n      <Tooltip title='Zobacz projekt na żywo'>\r\n        <Button\r\n          variant='contained'\r\n          color='primary'\r\n          size='medium'\r\n          component='a'\r\n          href={liveLink}\r\n          classes={{ root: classes.root }}\r\n          startIcon={<DevicesIcon classes={{ root: classes.icon }} />}\r\n        >\r\n          Live\r\n        </Button>\r\n      </Tooltip>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const GithubAndLiveButtons = withStyles(useStyles)(GithubAndLiveButtonsWithStyles)\r\n","import React, { useCallback } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActionArea from '@material-ui/core/CardActionArea'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\nimport { IPost } from '../Content'\r\nimport { GithubAndLiveButtons } from './GithubAndLiveButtons'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  actions: {\r\n    '& > :last-child': {\r\n      marginLeft: 'auto'\r\n    }\r\n  },\r\n  actionArea: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    alignItems: 'stretch',\r\n    flexDirection: 'column',\r\n    justifyContent: 'start'\r\n  },\r\n  content: {\r\n    width: '100%'\r\n  }\r\n})\r\n\r\ninterface IProps extends IPost {\r\n  onOpenDescription?: (id: number) => void\r\n}\r\n\r\nexport default function Post({\r\n  id,\r\n  img,\r\n  title,\r\n  liveLink,\r\n  codeLink,\r\n  shortDescription,\r\n  onOpenDescription\r\n}: IProps) {\r\n  const classes = useStyles()\r\n\r\n  const onDescription = useCallback(() => {\r\n    if (onOpenDescription) onOpenDescription(id)\r\n  }, [onOpenDescription, id])\r\n\r\n  return (\r\n    <Card classes={{ root: classes.root }}>\r\n      <CardActionArea onClick={onDescription} classes={{ root: classes.actionArea }}>\r\n        <CardMedia component='img' alt='' height='140' image={img} title={title} />\r\n\r\n        <CardContent classes={{ root: classes.content }}>\r\n          <Typography gutterBottom variant='h5' component='h2'>\r\n            {title}\r\n          </Typography>\r\n\r\n          {shortDescription}\r\n        </CardContent>\r\n      </CardActionArea>\r\n\r\n      <CardActions classes={{ root: classes.actions }}>\r\n        <GithubAndLiveButtons codeLink={codeLink} liveLink={liveLink} />\r\n\r\n        <Tooltip title='Zobacz pełny opis projektu'>\r\n          <Button color='secondary' variant='contained' onClick={onDescription}>\r\n            Opis\r\n          </Button>\r\n        </Tooltip>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      position: 'absolute',\r\n      top: theme.spacing(1),\r\n      right: theme.spacing(1),\r\n      color: theme.palette.grey[500]\r\n    }\r\n  })\r\n)\r\n\r\ninterface IProps {\r\n  onClick: () => void\r\n}\r\n\r\nexport default function CloseButton({ onClick }: IProps) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <IconButton aria-label='close' onClick={onClick} classes={{ root: classes.root }}>\r\n      <CloseIcon />\r\n    </IconButton>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport { IPost } from '../Content'\r\nimport CloseButton from '../utils/CloseButton'\r\nimport { GithubAndLiveButtons } from '../Post'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    buttonIcon: {\r\n      marginRight: theme.spacing(1.5)\r\n    },\r\n    image: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(2)\r\n    }\r\n  })\r\n)\r\n\r\ninterface IProps extends IPost {\r\n  open: boolean\r\n  handleClose: () => void\r\n}\r\n\r\nexport default function PostDialog({\r\n  open,\r\n  img,\r\n  title,\r\n  codeLink,\r\n  liveLink,\r\n  handleClose,\r\n  longDescription\r\n}: IProps) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open}>\r\n      <DialogTitle disableTypography>\r\n        <Typography variant='h6'>{title}</Typography>\r\n\r\n        <CloseButton onClick={handleClose} />\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n        <img alt='' src={img} title={title} className={classes.image} />\r\n\r\n        {longDescription}\r\n\r\n        <GithubAndLiveButtons\r\n          codeLink={codeLink}\r\n          liveLink={liveLink}\r\n          classes={{ root: classes.button, icon: classes.buttonIcon }}\r\n        />\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button color='secondary' variant='contained' onClick={handleClose}>\r\n          OK\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\ninterface IProps {\r\n  label: string\r\n  icon: string\r\n}\r\n\r\nexport default function Emoji({ icon, label }: IProps) {\r\n  return (\r\n    <span role='img' aria-label={label}>\r\n      {` ${icon} `}\r\n    </span>\r\n  )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport Link from '@material-ui/core/Link'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport Emoji from '../utils/Emoji'\r\n\r\nexport default function AboutMeContent() {\r\n  return (\r\n    <Fragment>\r\n      <Typography gutterBottom>\r\n        Projekt ten jest zbiornikiem na moje projekty uczelniane które są dostępne również na\r\n        GitHub'ie,\r\n        <Link href='https://github.com/KamilMikolajczukStudia' target='_blank'>\r\n          {' github/KamilMikolajczukStudia '}\r\n        </Link>\r\n      </Typography>\r\n\r\n      <Typography gutterBottom>\r\n        W projekcie użyłem{' '}\r\n        <Link href='https://reactjs.org/' target='_blank'>\r\n          React'a\r\n        </Link>\r\n        <Emoji icon='❤️' label='serce' />\r\n        {' z '}\r\n        <Link href='https://www.typescriptlang.org/' target='_blank'>\r\n          TypeScriptem\r\n        </Link>{' '}\r\n        <Emoji icon='❤️' label='serce' /> oraz{' '}\r\n        <Link href='https://material-ui.com/' target='_blank'>\r\n          Material-UI\r\n        </Link>{' '}\r\n        , dzięki M-UI można podpatrzeć również działanie{' '}\r\n        <Link href='https://cssinjs.org/' target='_blank'>\r\n          JSS\r\n        </Link>{' '}\r\n        oraz implementację komponentów w stylu{' '}\r\n        <Link href='https://material.io/design/' target='_blank'>\r\n          Material Design\r\n        </Link>\r\n      </Typography>\r\n\r\n      <Typography gutterBottom>\r\n        Aby odpalić projekt u siebie należy wyposażyć się w{' '}\r\n        <Link href='https://nodejs.org' target='_blank'>\r\n          Node.js\r\n        </Link>\r\n      </Typography>\r\n\r\n      <Typography variant='h6' gutterBottom>\r\n        Projekt \"Moja Wiśniowa\"\r\n      </Typography>\r\n\r\n      <Typography gutterBottom>\r\n        Projekt \"Moja Wiśniowa\" jest projektem szkolnym nastawionym przede wszystkim na PHP i MySQL\r\n        w szczególności kwestii prezentacji pewnych mechanizmów takich jak logowanie dodawanie i\r\n        usuwanie treści jak i podstawowych aspektów związanych z bezpieczeństwem takimi jak SQL\r\n        injection czy atak XSS, dlatego nie ma fajerwerków w CSS czy JS, za to w tym projekcie PHP\r\n        nie ma wcale <Emoji icon='😀' label='uśmiech' />\r\n      </Typography>\r\n\r\n      <Typography gutterBottom>\r\n        Podchodź z dystansem - chodzi oczywiście o to że temat jest bardzo luźny nie miało być to\r\n        nic poważnego <Emoji icon='😀' label={'label'} />\r\n      </Typography>\r\n\r\n      <Typography variant='h6' gutterBottom>\r\n        IAS i robot marsjański\r\n      </Typography>\r\n\r\n      <Typography gutterBottom>\r\n        Aby nie było pusto dodaję 2 projekty zrobione w ramach zajęć na poprednich semestrach -\r\n        symulator maszyny IAS oraz grę logiczną robot marsjański\r\n      </Typography>\r\n    </Fragment>\r\n  )\r\n}\r\n","import React, { Fragment, ReactNode } from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport { Typography } from '@material-ui/core'\r\nimport AlertTitle from '@material-ui/lab/AlertTitle'\r\n\r\nimport ias from './img/ias.png'\r\nimport kot from './img/kot.jpg'\r\nimport robot from './img/robot.png'\r\nimport kmstudia from './img/kmstudia.png'\r\nimport mojaWisniowa from './img/moja-wisniowa.png'\r\n\r\nimport AboutMeContent from './Banner/AboutMeContent'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}))\r\n\r\ninterface IProps {\r\n  children?: ReactNode\r\n}\r\n\r\nfunction WorningInfo({ children }: IProps) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Alert severity='warning' classes={{ root: classes.root }}>\r\n      {children}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport interface IPost {\r\n  id: number\r\n  title: string\r\n  img: string\r\n  shortDescription: React.ReactNode\r\n  longDescription: React.ReactNode\r\n  liveLink: string\r\n  codeLink: string\r\n}\r\n\r\nexport const placeholder: IPost = {\r\n  id: 0,\r\n  title: 'Tytuł',\r\n  img: 'https://via.placeholder.com/1024x512.png?text=Obrazek',\r\n  shortDescription: <p>Krótki opis</p>,\r\n  longDescription: <p>Długi opis</p>,\r\n  liveLink: '#',\r\n  codeLink: '#'\r\n}\r\n\r\nconst posts: IPost[] = [\r\n  {\r\n    id: 2,\r\n    img: kot,\r\n    title: 'Projekt 1',\r\n    shortDescription: (\r\n      <Fragment>\r\n        <Typography variant='body2'>Projekt na labolatorium 1</Typography>\r\n        <Typography variant='body2'>\r\n          Wstęp do architektury klient-server i języka HTML schemat pliku i kodowanie znaków\r\n        </Typography>\r\n      </Fragment>\r\n    ),\r\n    longDescription: (\r\n      <Fragment>\r\n        <Typography>Projekt na labolatorium 1</Typography>\r\n        <Typography>\r\n          Wstęp do architektury klient-server i języka HTML, schemat pliku i kodowanie\r\n        </Typography>\r\n      </Fragment>\r\n    ),\r\n    liveLink: 'http://kamilmikolajczuk.cba.pl/projekt1/',\r\n    codeLink: 'https://github.com/KamilMikolajczukStudia/projekt1'\r\n  },\r\n  {\r\n    id: 3,\r\n    img: kmstudia,\r\n    title: 'Kamil Mikołajczuk - Studia',\r\n    shortDescription: (\r\n      <Fragment>\r\n        <Typography variant='body2'>\r\n          Projekt zbiorczy na przedmiot \"Budowa Serwisów interntowych\"\r\n        </Typography>\r\n      </Fragment>\r\n    ),\r\n    longDescription: (\r\n      <Fragment>\r\n        <AboutMeContent />\r\n      </Fragment>\r\n    ),\r\n    liveLink: './',\r\n    codeLink: 'https://github.com/KamilMikolajczukStudia/kamilmikolajczukstudia-github-io-src'\r\n  },\r\n  {\r\n    id: 1,\r\n    img: mojaWisniowa,\r\n    title: 'Moja Wiśniowa',\r\n    shortDescription: (\r\n      <Fragment>\r\n        <Typography variant='body2'>Szkolny projekt zaliczeniowy</Typography>\r\n        <WorningInfo>Podchodź z dystansem</WorningInfo>\r\n      </Fragment>\r\n    ),\r\n    longDescription: (\r\n      <Fragment>\r\n        <Typography>Szkolny projekt zaliczeniowy</Typography>\r\n        <WorningInfo>\r\n          <AlertTitle>Uwaga</AlertTitle> Do tego projektu podchodź z dystansem\r\n        </WorningInfo>\r\n      </Fragment>\r\n    ),\r\n    liveLink: 'http://kamilmikolajczuk.cba.pl/moja-wisniowa',\r\n    codeLink: 'https://github.com/KamilMikolajczukStudia/moja-wisniowa'\r\n  },\r\n  {\r\n    id: 4,\r\n    img: ias,\r\n    title: 'Symulator maszyny IAS',\r\n    shortDescription: (\r\n      <Fragment>\r\n        <Typography variant='body2'>\r\n          Symulator maszyny IAS wykonany na zajęcia z Architektury Komputerów\r\n        </Typography>\r\n      </Fragment>\r\n    ),\r\n    longDescription: (\r\n      <Fragment>\r\n        <Typography>\r\n          Symulator maszyny IAS wykonuje kod napisany na legendarne maszyny IAS, umożliwia też\r\n          śledzenie krok po kroku wykonania programu, wykonany na zajęcia z Architektury Komputerów\r\n        </Typography>\r\n      </Fragment>\r\n    ),\r\n    liveLink: 'https://github.com/MikolajczukKamil/IAS',\r\n    codeLink: 'https://github.com/MikolajczukKamil/IAS'\r\n  },\r\n  {\r\n    id: 5,\r\n    img: robot,\r\n    title: 'Robot marsjański',\r\n    shortDescription: (\r\n      <Fragment>\r\n        <Typography variant='body2'>\r\n          Projekt wykonany w ramach przedmiotu wstęp do programowania\r\n        </Typography>\r\n      </Fragment>\r\n    ),\r\n    longDescription: (\r\n      <Fragment>\r\n        <Typography>\r\n          Robot marsjański - gra pamięciowa, twoim zadaniem jest znaleźć ukryty cel możesz poruszać\r\n          się robotem prosto, w lewo, w prawo oraz wstecz po każdym ruchu otrzymujesz informację jak\r\n          daleko jesteś od celu, pamiętaj że ilość paliwa w robocie jest ograniczona, w razie\r\n          problemów pomoże ci AI które w możliwie najmniejszej ilości kroków dokończy szukanie celu,\r\n          do wyboru są dwie wersje graficzna oraz tekstowa (dla prawdziwych mistrzów)\r\n        </Typography>\r\n      </Fragment>\r\n    ),\r\n    liveLink: 'https://github.com/MikolajczukKamil/robot',\r\n    codeLink: 'https://github.com/MikolajczukKamil/robot'\r\n  }\r\n]\r\n\r\nexport default posts\r\n","import React, { Fragment, useCallback, useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport Post from '../Post'\r\nimport PostDialog from './PostDialog'\r\nimport posts, { IPost, placeholder } from '../Content'\r\n\r\nexport default function Posts() {\r\n  const [open, setOpen] = useState(false)\r\n  const [opendPost, setOpendPost] = useState<IPost>(placeholder)\r\n\r\n  const onOpen = useCallback(id => {\r\n    const selected = posts.find(post => post.id === id)\r\n    if (!selected) return\r\n\r\n    setOpendPost(selected)\r\n    setOpen(true)\r\n  }, [])\r\n\r\n  const handleClose = useCallback(() => setOpen(false), [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid container spacing={2} justify='center'>\r\n        {posts.map(post => (\r\n          <Grid item key={post.id} lg={4} md={4} sm={6} xs={12}>\r\n            <Post {...post} onOpenDescription={onOpen}></Post>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      <PostDialog handleClose={handleClose} {...opendPost} open={open}></PostDialog>\r\n    </Fragment>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    title: {\r\n      flexGrow: 1,\r\n      [theme.breakpoints.down('xs')]: {\r\n        textAlign: 'center'\r\n      }\r\n    }\r\n  })\r\n)\r\n\r\nexport default function Header() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <AppBar position='static'>\r\n      <Toolbar>\r\n        <Typography variant='h6' classes={{ root: classes.title }}>\r\n          Budowa Serwisów Interntowych\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Link from '@material-ui/core/Link'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\n\r\nimport CloseButton from '../utils/CloseButton'\r\nimport AboutMeContent from './AboutMeContent'\r\n\r\ninterface IProps {\r\n  open: boolean\r\n  handleClose: () => void\r\n}\r\n\r\nconst email = ['k.mikolajczuk123', 'gmail.com'].join('@')\r\n\r\nexport default function AboutMeDialog({ open, handleClose }: IProps) {\r\n  return (\r\n    <Dialog onClose={handleClose} open={open} maxWidth='md'>\r\n      <DialogTitle disableTypography>\r\n        <Typography variant='h6'>O mnie a właściwie o tym projekcie</Typography>\r\n\r\n        <CloseButton onClick={handleClose} />\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n        <AboutMeContent />\r\n\r\n        <Typography variant='h6' gutterBottom>\r\n          Kontakt\r\n        </Typography>\r\n\r\n        <Typography gutterBottom>\r\n          <Link href='https://github.com/mikolajczukkamil'>Mój Github</Link>\r\n        </Typography>\r\n\r\n        <Typography gutterBottom>\r\n          <Link href='https://www.linkedin.com/in/kamil-miko%C5%82ajczuk-61682b16a/'>\r\n            Mój LinkedIn\r\n          </Link>\r\n        </Typography>\r\n\r\n        <Typography gutterBottom>\r\n          <Link href={`mailto:${email}`}>E-mail: {email}</Link>\r\n        </Typography>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button color='secondary' variant='contained' onClick={handleClose}>\r\n          OK\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Container from '@material-ui/core/Container'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport sggwLogo from '../img/sggw.png'\r\nimport AboutMeDialog from './AboutMeDialog'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      padding: '64px 24px',\r\n      [theme.breakpoints.down('sm')]: {\r\n        flexDirection: 'column'\r\n      }\r\n    },\r\n    image: {\r\n      display: 'block',\r\n      maxWidth: 256,\r\n      marginRight: 48,\r\n      [theme.breakpoints.down('sm')]: {\r\n        marginRight: 0\r\n      }\r\n    },\r\n    button: {\r\n      marginTop: 32,\r\n      paddingLeft: theme.spacing(4),\r\n      paddingRight: theme.spacing(4)\r\n    },\r\n    description: {\r\n      [theme.breakpoints.down('sm')]: {\r\n        textAlign: 'center',\r\n        marginTop: theme.spacing(4)\r\n      }\r\n    }\r\n  })\r\n)\r\n\r\nexport default function Banner() {\r\n  const classes = useStyles()\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const openDialog = useCallback(() => setOpen(true), [])\r\n  const closeDialog = useCallback(() => setOpen(false), [])\r\n\r\n  return (\r\n    <Container maxWidth='lg' classes={{ root: classes.container }}>\r\n      <img src={sggwLogo} alt='SGGW logo' className={classes.image} />\r\n\r\n      <div className={classes.description}>\r\n        <Typography variant='h2'>Kamil Mikołajczuk</Typography>\r\n        <Typography variant='subtitle1'>Budowa Serwisów interntowych</Typography>\r\n\r\n        <Button\r\n          variant='outlined'\r\n          size='large'\r\n          color='primary'\r\n          classes={{ root: classes.button }}\r\n          onClick={openDialog}\r\n        >\r\n          O mnie\r\n        </Button>\r\n      </div>\r\n\r\n      <AboutMeDialog handleClose={closeDialog} open={open} />\r\n    </Container>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Link from '@material-ui/core/Link'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Container from '@material-ui/core/Container'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport GithubIcon from '@material-ui/icons/GitHub'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexDirection: 'column',\r\n      marginTop: theme.spacing(4)\r\n    },\r\n    title: {\r\n      flex: 1\r\n    },\r\n    top: {\r\n      [theme.breakpoints.down('xs')]: {\r\n        textAlign: 'center'\r\n      },\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n      color: theme.palette.primary.contrastText,\r\n      backgroundColor: theme.palette.primary.main\r\n    },\r\n    bottom: {\r\n      userSelect: 'none',\r\n      color: theme.palette.primary.contrastText,\r\n      backgroundColor: theme.palette.primary.dark\r\n    },\r\n    iconLink: {\r\n      [theme.breakpoints.down('xs')]: {\r\n        marginTop: theme.spacing(4)\r\n      },\r\n      margin: 'auto',\r\n      display: 'block',\r\n      fontSize: theme.spacing(12)\r\n    },\r\n    icon: {\r\n      display: 'block'\r\n    },\r\n    flex: {\r\n      display: 'flex'\r\n    }\r\n  })\r\n)\r\n\r\nconst year = new Date().getFullYear().toString()\r\nconst email = ['k.mikolajczuk123', 'gmail.com'].join('@')\r\n\r\nexport default function Footer() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <footer className={classes.root}>\r\n      <div className={classes.top}>\r\n        <Grid container component={Container} maxWidth='md'>\r\n          <Grid item xs={12} sm={6}>\r\n            <Typography gutterBottom variant='h6'>\r\n              Linki\r\n            </Typography>\r\n            <Typography gutterBottom>\r\n              <Link\r\n                href='https://github.com/mikolajczukkamil'\r\n                color='inherit'\r\n                title='Publiczny GitHub'\r\n              >\r\n                Mój Github\r\n              </Link>\r\n            </Typography>\r\n\r\n            <Typography gutterBottom>\r\n              <Link\r\n                href='https://www.linkedin.com/in/kamil-miko%C5%82ajczuk-61682b16a/'\r\n                color='inherit'\r\n              >\r\n                Mój LinkedIn\r\n              </Link>\r\n            </Typography>\r\n\r\n            <Typography gutterBottom>\r\n              <Link href={`mailto:${email}`} color='inherit'>\r\n                E-mail: {email}\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} classes={{ root: classes.flex }}>\r\n            <Link\r\n              color='inherit'\r\n              title='GitHub projektów uczelnianych'\r\n              target='_blank'\r\n              classes={{ root: classes.iconLink }}\r\n              href='https://github.com/KamilMikolajczukStudia/'\r\n            >\r\n              <GithubIcon fontSize='inherit' classes={{ root: classes.icon }} />\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n\r\n      <div className={classes.bottom}>\r\n        <Toolbar>\r\n          <Typography classes={{ root: classes.title }} align='center'>\r\n            &copy; {year} Copyright: Kamil Mikołajczuk\r\n          </Typography>\r\n        </Toolbar>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n","import React, { Fragment } from 'react'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\n\nimport Posts from '../Posts'\nimport Header from '../Header'\nimport Banner from '../Banner'\nimport Footer from '../Footer'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    '@global': {\n      '::-moz-selection': {\n        backgroundColor: theme.palette.secondary.light\n      },\n      '::selection': {\n        backgroundColor: theme.palette.secondary.light\n      },\n\n      '*': {\n        scrollbarColor: `${theme.palette.grey[500]} ${theme.palette.grey[100]}`,\n        scrollbarWidth: 'thin'\n      },\n      '::-webkit-scrollbar-track': {\n        borderRadius: 2,\n        backgroundColor: theme.palette.grey[200]\n      },\n      '::-webkit-scrollbar': {\n        width: 6,\n        height: 6\n      },\n      '::-webkit-scrollbar-thumb': {\n        borderRadius: 2,\n        backgroundColor: theme.palette.grey[500]\n      }\n    }\n  })\n)\n\nexport default function Main() {\n  useStyles()\n\n  return (\n    <Fragment>\n      <Header />\n\n      <Container maxWidth='lg'>\n        <Banner />\n\n        <Posts />\n      </Container>\n\n      <Footer />\n    </Fragment>\n  )\n}\n","import React from 'react'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport { createMuiTheme } from '@material-ui/core/styles'\r\nimport { ThemeProvider } from '@material-ui/styles'\r\nimport { green, orange } from '@material-ui/core/colors'\r\n\r\nimport Main from './Main'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: green[700]\r\n    },\r\n    secondary: {\r\n      main: orange[800]\r\n    }\r\n  }\r\n})\r\n\r\nexport default function App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n\r\n      <Main />\r\n    </ThemeProvider>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}