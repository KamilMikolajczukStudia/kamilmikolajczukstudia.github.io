{"version":3,"sources":["img/sggw.png","img/moja-wisniowa.png","img/intro.jpg","img/kot.jpg","Header/Header.tsx","Banner/AboutMeDialog.tsx","Banner/Banner.tsx","Post/GithubAndLiveButtons.tsx","Post/Post.tsx","Posts/PostDialog.tsx","Content.tsx","Posts/Posts.tsx","Main/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","createStyles","title","flexGrow","breakpoints","down","textAlign","Header","classes","AppBar","position","Toolbar","Typography","variant","root","closeButton","top","spacing","right","color","palette","grey","buttonIcon","marginRight","AboutMeDialog","open","handleClose","Dialog","onClose","maxWidth","DialogTitle","disableTypography","IconButton","aria-label","onClick","DialogContent","dividers","DialogActions","Button","container","display","alignItems","justifyContent","padding","flexDirection","image","button","marginTop","paddingLeft","paddingRight","description","Banner","useState","setOpen","openDialog","useCallback","closeDialog","Container","src","sggwLogo","alt","className","size","GithubAndLiveButtons","withStyles","marginLeft","icon","codeLink","liveLink","component","href","target","style","backgroundColor","startIcon","height","actions","actionArea","flex","content","width","Post","id","img","shortDescription","onOpenDescription","onDescription","Card","CardActionArea","CardMedia","CardContent","gutterBottom","Array","isArray","map","text","key","CardActions","marginBottom","PostDialog","longDescription","placeholder","introImg","posts","mojaWisniowa","kot","Posts","opendPost","setOpendPost","onOpen","selected","find","post","Grid","justify","item","lg","md","sm","xs","secondary","light","scrollbarColor","scrollbarWidth","borderRadius","Main","createMuiTheme","primary","main","green","orange","Boolean","window","location","hostname","match","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.520716b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sggw.8f7b34be.png\";","module.exports = __webpack_public_path__ + \"static/media/moja-wisniowa.6ce17554.png\";","module.exports = __webpack_public_path__ + \"static/media/intro.48ddef49.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kot.63003ac4.jpg\";","import React from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    title: {\r\n      flexGrow: 1,\r\n      [theme.breakpoints.down('xs')]: {\r\n        textAlign: 'center'\r\n      }\r\n    }\r\n  })\r\n)\r\n\r\nexport default function Header() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <AppBar position='static'>\r\n      <Toolbar>\r\n        <Typography variant='h6' classes={{ root: classes.title }}>\r\n          Budowa Serwis√≥w Interntowych\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    closeButton: {\r\n      position: 'absolute',\r\n      top: theme.spacing(1),\r\n      right: theme.spacing(1),\r\n      color: theme.palette.grey[500]\r\n    },\r\n    buttonIcon: {\r\n      marginRight: theme.spacing(1.5)\r\n    }\r\n  })\r\n)\r\n\r\ninterface IProps {\r\n  open: boolean\r\n  handleClose: () => void\r\n}\r\n\r\nexport default function AboutMeDialog({ open, handleClose }: IProps) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open} maxWidth='lg'>\r\n      <DialogTitle disableTypography>\r\n        <Typography variant='h6'>O mnie</Typography>\r\n\r\n        <IconButton\r\n          aria-label='close'\r\n          onClick={handleClose}\r\n          classes={{ root: classes.closeButton }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>ala ma kota</DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button color='secondary' variant='contained' onClick={handleClose}>\r\n          OK\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport sggwLogo from '../img/sggw.png'\r\nimport AboutMeDialog from './AboutMeDialog'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      padding: '64px 24px',\r\n      [theme.breakpoints.down('sm')]: {\r\n        flexDirection: 'column'\r\n      }\r\n    },\r\n    image: {\r\n      display: 'block',\r\n      maxWidth: 256,\r\n      marginRight: 48,\r\n      [theme.breakpoints.down('sm')]: {\r\n        marginRight: 0\r\n      }\r\n    },\r\n    button: {\r\n      marginTop: 32,\r\n      paddingLeft: theme.spacing(4),\r\n      paddingRight: theme.spacing(4)\r\n    },\r\n    description: {\r\n      [theme.breakpoints.down('sm')]: {\r\n        textAlign: 'center',\r\n        marginTop: theme.spacing(4)\r\n      }\r\n    }\r\n  })\r\n)\r\n\r\nexport default function Banner() {\r\n  const classes = useStyles()\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const openDialog = useCallback(() => setOpen(true), [])\r\n  const closeDialog = useCallback(() => setOpen(false), [])\r\n\r\n  return (\r\n    <Container maxWidth='lg' classes={{ root: classes.container }}>\r\n      <img src={sggwLogo} alt='SGGW logo' className={classes.image} />\r\n\r\n      <div className={classes.description}>\r\n        <Typography variant='h2'>Kamil Miko≈Çajczuk</Typography>\r\n        <Typography variant='subtitle1'>Budowa Serwis√≥w interntowych</Typography>\r\n\r\n        <Button\r\n          variant='outlined'\r\n          size='large'\r\n          color='primary'\r\n          classes={{ root: classes.button }}\r\n          onClick={openDialog}\r\n        >\r\n          O mnie\r\n        </Button>\r\n      </div>\r\n\r\n      <AboutMeDialog handleClose={closeDialog} open={open} />\r\n    </Container>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { withStyles, WithStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport GitHubIcon from '@material-ui/icons/GitHub'\r\nimport DevicesIcon from '@material-ui/icons/Devices'\r\n\r\nconst useStyles = {\r\n  root: {\r\n    '&:not(:first-child)': {\r\n      marginLeft: 8\r\n    }\r\n  },\r\n  icon: {}\r\n}\r\n\r\ninterface IProps extends WithStyles<typeof useStyles> {\r\n  codeLink: string\r\n  liveLink: string\r\n}\r\n\r\nfunction GithubAndLiveButtonsWithStyles({ codeLink, liveLink, classes }: IProps) {\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant='contained'\r\n        color='inherit'\r\n        size='medium'\r\n        component='a'\r\n        href={codeLink}\r\n        target='_blank'\r\n        classes={{ root: classes.root }}\r\n        style={{ backgroundColor: '#24292e', color: 'white' }}\r\n        startIcon={<GitHubIcon color='inherit' classes={{ root: classes.icon }} />}\r\n      >\r\n        Kod\r\n      </Button>\r\n\r\n      <Button\r\n        variant='contained'\r\n        color='primary'\r\n        size='medium'\r\n        component='a'\r\n        href={liveLink}\r\n        classes={{ root: classes.root }}\r\n        startIcon={<DevicesIcon classes={{ root: classes.icon }} />}\r\n      >\r\n        Live\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const GithubAndLiveButtons = withStyles(useStyles)(GithubAndLiveButtonsWithStyles)\r\n","import React, { useCallback } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActionArea from '@material-ui/core/CardActionArea'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport { IPost } from '../Content'\r\nimport { GithubAndLiveButtons } from './GithubAndLiveButtons'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  actions: {\r\n    '& > :last-child': {\r\n      marginLeft: 'auto'\r\n    }\r\n  },\r\n  actionArea: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    alignItems: 'stretch',\r\n    flexDirection: 'column',\r\n    justifyContent: 'start'\r\n  },\r\n  content: {\r\n    width: '100%'\r\n  }\r\n})\r\n\r\ninterface IProps extends IPost {\r\n  onOpenDescription?: (id: number) => void\r\n}\r\n\r\nexport default function Post({\r\n  id,\r\n  img,\r\n  title,\r\n  liveLink,\r\n  codeLink,\r\n  shortDescription,\r\n  onOpenDescription\r\n}: IProps) {\r\n  const classes = useStyles()\r\n\r\n  const onDescription = useCallback(() => {\r\n    if (onOpenDescription) onOpenDescription(id)\r\n  }, [onOpenDescription, id])\r\n\r\n  return (\r\n    <Card classes={{ root: classes.root }}>\r\n      <CardActionArea onClick={onDescription} classes={{ root: classes.actionArea }}>\r\n        <CardMedia component='img' alt='' height='140' image={img} title={title} />\r\n\r\n        <CardContent classes={{ root: classes.content }}>\r\n          <Typography gutterBottom variant='h5' component='h2'>\r\n            {title}\r\n          </Typography>\r\n\r\n          {(Array.isArray(shortDescription) ? shortDescription : [shortDescription]).map(\r\n            (text, id) => (\r\n              <Typography key={id} variant='body2' color='textSecondary' component='p'>\r\n                {text}\r\n              </Typography>\r\n            )\r\n          )}\r\n        </CardContent>\r\n      </CardActionArea>\r\n\r\n      <CardActions classes={{ root: classes.actions }}>\r\n        <GithubAndLiveButtons codeLink={codeLink} liveLink={liveLink} />\r\n\r\n        <Button color='secondary' variant='contained' onClick={onDescription}>\r\n          Opis\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport { IPost } from '../Content'\r\nimport { GithubAndLiveButtons } from '../Post'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    closeButton: {\r\n      position: 'absolute',\r\n      top: theme.spacing(1),\r\n      right: theme.spacing(1),\r\n      color: theme.palette.grey[500]\r\n    },\r\n    button: {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    buttonIcon: {\r\n      marginRight: theme.spacing(1.5)\r\n    },\r\n    image: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(2)\r\n    }\r\n  })\r\n)\r\n\r\ninterface IProps extends IPost {\r\n  open: boolean\r\n  handleClose: () => void\r\n}\r\n\r\nexport default function PostDialog({\r\n  open,\r\n  img,\r\n  title,\r\n  codeLink,\r\n  liveLink,\r\n  handleClose,\r\n  longDescription\r\n}: IProps) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open}>\r\n      <DialogTitle disableTypography>\r\n        <Typography variant='h6'>{title}</Typography>\r\n\r\n        <IconButton\r\n          aria-label='close'\r\n          onClick={handleClose}\r\n          classes={{ root: classes.closeButton }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n        <img alt='' src={img} title={title} className={classes.image} />\r\n\r\n        {longDescription}\r\n\r\n        <GithubAndLiveButtons\r\n          codeLink={codeLink}\r\n          liveLink={liveLink}\r\n          classes={{ root: classes.button, icon: classes.buttonIcon }}\r\n        />\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button color='secondary' variant='contained' onClick={handleClose}>\r\n          OK\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport mojaWisniowa from './img/moja-wisniowa.png'\r\nimport introImg from './img/intro.jpg'\r\nimport kot from './img/kot.jpg'\r\n\r\nexport interface IPost {\r\n  id: number\r\n  title: string\r\n  img: string\r\n  shortDescription: string | string[]\r\n  longDescription: React.ReactNode\r\n  liveLink: string\r\n  codeLink: string\r\n}\r\n\r\nexport const placeholder: IPost = {\r\n  id: 0,\r\n  title: 'Tytu≈Ç projektu',\r\n  img: introImg,\r\n  shortDescription: ['Projekt', 'Opis'],\r\n  longDescription: <p>Lorem ipsum</p>,\r\n  liveLink: '#',\r\n  codeLink: '#'\r\n}\r\n\r\nconst posts: IPost[] = [\r\n  {\r\n    id: 1,\r\n    img: mojaWisniowa,\r\n    title: 'Moja Wi≈õniowa',\r\n    shortDescription: 'Szkolny projekt zaliczeniowy',\r\n    longDescription: <p>Szkolny projekt zaliczeniowy</p>,\r\n    liveLink: '#',\r\n    codeLink: '#'\r\n  },\r\n  {\r\n    id: 2,\r\n    img: kot,\r\n    title: 'Projekt 1',\r\n    shortDescription: [\r\n      'Projekt na labolatorium 1',\r\n      'Wstƒôp do architektury klient-server i jƒôzyka HTML schemat pliku i kodowanie znak√≥w'\r\n    ],\r\n    longDescription: (\r\n      <Fragment>\r\n        <p>Projekt na labolatorium 1</p>\r\n        <p>Wstƒôp do architektury klient-server i jƒôzyka HTML, schemat pliku i kodowanie</p>\r\n      </Fragment>\r\n    ),\r\n    liveLink: '/projekt1',\r\n    codeLink: 'https://github.com/KamilMikolajczukStudia/projekt1'\r\n  },\r\n  placeholder\r\n]\r\n\r\nexport default posts\r\n","import React, { Fragment, useCallback, useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport Post from '../Post'\r\nimport PostDialog from './PostDialog'\r\nimport posts, { IPost, placeholder } from '../Content'\r\n\r\nexport default function Posts() {\r\n  const [open, setOpen] = useState(false)\r\n  const [opendPost, setOpendPost] = useState<IPost>(placeholder)\r\n\r\n  const onOpen = useCallback(id => {\r\n    const selected = posts.find(post => post.id === id)\r\n    if (!selected) return\r\n\r\n    setOpendPost(selected)\r\n    setOpen(true)\r\n  }, [])\r\n\r\n  const handleClose = useCallback(() => setOpen(false), [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid container spacing={2} justify='center'>\r\n        {posts.map(post => (\r\n          <Grid item key={post.id} lg={4} md={4} sm={6} xs={12}>\r\n            <Post {...post} onOpenDescription={onOpen}></Post>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      <PostDialog handleClose={handleClose} {...opendPost} open={open}></PostDialog>\r\n    </Fragment>\r\n  )\r\n}\r\n","import React, { Fragment } from 'react'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\n\nimport Header from '../Header'\nimport Banner from '../Banner'\nimport Posts from '../Posts'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    '@global': {\n      '::-moz-selection': {\n        backgroundColor: theme.palette.secondary.light\n      },\n      '::selection': {\n        backgroundColor: theme.palette.secondary.light\n      },\n\n      '*': {\n        scrollbarColor: `${theme.palette.grey[500]} ${theme.palette.grey[100]}`,\n        scrollbarWidth: 'thin'\n      },\n      '::-webkit-scrollbar-track': {\n        borderRadius: 2,\n        backgroundColor: theme.palette.grey[200]\n      },\n      '::-webkit-scrollbar': {\n        width: 6\n      },\n      '::-webkit-scrollbar-thumb': {\n        borderRadius: 2,\n        backgroundColor: theme.palette.grey[500]\n      }\n    }\n  })\n)\n\nexport default function Main() {\n  useStyles()\n\n  return (\n    <Fragment>\n      <Header />\n\n      <Container maxWidth='lg'>\n        <Banner />\n\n        <Posts />\n      </Container>\n    </Fragment>\n  )\n}\n","import React from 'react'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport { createMuiTheme } from '@material-ui/core/styles'\r\nimport { ThemeProvider } from '@material-ui/styles'\r\nimport { green, orange } from '@material-ui/core/colors'\r\n\r\nimport Main from './Main'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: green[700]\r\n    },\r\n    secondary: {\r\n      main: orange[800]\r\n    }\r\n  }\r\n})\r\n\r\nexport default function App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n\r\n      <Main />\r\n    </ThemeProvider>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}